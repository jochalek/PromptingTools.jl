import { _ as _export_sfc, c as createElementBlock, o as openBlock, a7 as createStaticVNode } from "./chunks/framework.BqhW5vgI.js";
const __pageData = JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"prompts/RAG.md","filePath":"prompts/RAG.md","lastUpdated":null}');
const _sfc_main = { name: "prompts/RAG.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<p>The following file is auto-generated from the <code>templates</code> folder. For any changes, please modify the source files in the <code>templates</code> folder.</p><p>To use these templates in <code>aigenerate</code>, simply provide the template name as a symbol, eg, <code>aigenerate(:MyTemplate; placeholder1 = value1)</code></p><h2 id="Rag-Templates" tabindex="-1">Rag Templates <a class="header-anchor" href="#Rag-Templates" aria-label="Permalink to &quot;Rag Templates {#Rag-Templates}&quot;">​</a></h2><h3 id="Template:-RAGAnswerFromContext" tabindex="-1">Template: RAGAnswerFromContext <a class="header-anchor" href="#Template:-RAGAnswerFromContext" aria-label="Permalink to &quot;Template: RAGAnswerFromContext {#Template:-RAGAnswerFromContext}&quot;">​</a></h3><ul><li><p>Description: For RAG applications. Answers the provided Questions based on the Context. Placeholders: <code>question</code>, <code>context</code></p></li><li><p>Placeholders: <code>context</code>, <code>question</code></p></li><li><p>Word count: 375</p></li><li><p>Source:</p></li><li><p>Version: 1.0</p></li></ul><p><strong>System Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Act as a world-class AI assistant with access to the latest knowledge via Context Information. </span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>**Instructions:**</span></span>\n<span class="line"><span>- Answer the question based only on the provided Context.</span></span>\n<span class="line"><span>- If you don&#39;t know the answer, just say that you don&#39;t know, don&#39;t try to make up an answer.</span></span>\n<span class="line"><span>- Be brief and concise.</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>**Context Information:**</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span>{{context}}</span></span>\n<span class="line"><span>---</span></span></code></pre></div><p><strong>User Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># Question</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>{{question}}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Answer</span></span></code></pre></div><h3 id="Template:-RAGCreateQAFromContext" tabindex="-1">Template: RAGCreateQAFromContext <a class="header-anchor" href="#Template:-RAGCreateQAFromContext" aria-label="Permalink to &quot;Template: RAGCreateQAFromContext {#Template:-RAGCreateQAFromContext}&quot;">​</a></h3><ul><li><p>Description: For RAG applications. Generate Question and Answer from the provided Context. If you don&#39;t have any special instructions, provide <code>instructions=&quot;None.&quot;</code>. Placeholders: <code>context</code>, <code>instructions</code></p></li><li><p>Placeholders: <code>context</code>, <code>instructions</code></p></li><li><p>Word count: 1396</p></li><li><p>Source:</p></li><li><p>Version: 1.1</p></li></ul><p><strong>System Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>You are a world-class teacher preparing contextual Question &amp; Answer sets for evaluating AI systems.</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>**Instructions for Question Generation:**</span></span>\n<span class="line"><span>1. Analyze the provided Context chunk thoroughly.</span></span>\n<span class="line"><span>2. Formulate a question that:</span></span>\n<span class="line"><span>   - Is specific and directly related to the information in the context chunk.</span></span>\n<span class="line"><span>   - Is not too short or generic; it should require a detailed understanding of the context to answer.</span></span>\n<span class="line"><span>   - Can only be answered using the information from the provided context, without needing external information.</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>**Instructions for Reference Answer Creation:**</span></span>\n<span class="line"><span>1. Based on the generated question, compose a reference answer that:</span></span>\n<span class="line"><span>   - Directly and comprehensively answers the question.</span></span>\n<span class="line"><span>   - Stays strictly within the bounds of the provided context chunk.</span></span>\n<span class="line"><span>   - Is clear, concise, and to the point, avoiding unnecessary elaboration or repetition.</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>**Example 1:**</span></span>\n<span class="line"><span>- Context Chunk: &quot;In 1928, Alexander Fleming discovered penicillin, which marked the beginning of modern antibiotics.&quot;</span></span>\n<span class="line"><span>- Generated Question: &quot;What was the significant discovery made by Alexander Fleming in 1928 and its impact?&quot;</span></span>\n<span class="line"><span>- Reference Answer: &quot;Alexander Fleming discovered penicillin in 1928, which led to the development of modern antibiotics.&quot;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>If the user provides special instructions, prioritize these over the general instructions.</span></span></code></pre></div><p><strong>User Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># Context Information</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span>{{context}}</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Special Instructions</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>{{instructions}}</span></span></code></pre></div><h3 id="Template:-RAGExtractMetadataLong" tabindex="-1">Template: RAGExtractMetadataLong <a class="header-anchor" href="#Template:-RAGExtractMetadataLong" aria-label="Permalink to &quot;Template: RAGExtractMetadataLong {#Template:-RAGExtractMetadataLong}&quot;">​</a></h3><ul><li><p>Description: For RAG applications. Extracts metadata from the provided text using longer instructions set and examples. If you don&#39;t have any special instructions, provide <code>instructions=&quot;None.&quot;</code>. Placeholders: <code>text</code>, <code>instructions</code></p></li><li><p>Placeholders: <code>text</code>, <code>instructions</code></p></li><li><p>Word count: 1384</p></li><li><p>Source:</p></li><li><p>Version: 1.1</p></li></ul><p><strong>System Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>You&#39;re a world-class data extraction engine built by OpenAI together with Google and to extract filter metadata to power the most advanced search engine in the world. </span></span>\n<span class="line"><span>    </span></span>\n<span class="line"><span>    **Instructions for Extraction:**</span></span>\n<span class="line"><span>    1. Carefully read through the provided Text</span></span>\n<span class="line"><span>    2. Identify and extract:</span></span>\n<span class="line"><span>       - All relevant entities such as names, places, dates, etc.</span></span>\n<span class="line"><span>       - Any special items like technical terms, unique identifiers, etc.</span></span>\n<span class="line"><span>       - In the case of Julia code or Julia documentation: specifically extract package names, struct names, function names, and important variable names (eg, uppercased variables)</span></span>\n<span class="line"><span>    3. Keep extracted values and categories short. Maximum 2-3 words!</span></span>\n<span class="line"><span>    4. You can only extract 3-5 items per Text, so select the most important ones.</span></span>\n<span class="line"><span>    5. Assign a search filter Category to each extracted Value</span></span>\n<span class="line"><span>    </span></span>\n<span class="line"><span>    **Example 1:**</span></span>\n<span class="line"><span>    - Document Chunk: &quot;Dr. Jane Smith published her findings on neuroplasticity in 2021. The research heavily utilized the DataFrames.jl and Plots.jl packages.&quot;</span></span>\n<span class="line"><span>    - Extracted keywords:</span></span>\n<span class="line"><span>      - Name: Dr. Jane Smith</span></span>\n<span class="line"><span>      - Date: 2021</span></span>\n<span class="line"><span>      - Technical Term: neuroplasticity</span></span>\n<span class="line"><span>      - JuliaPackage: DataFrames.jl, Plots.jl</span></span>\n<span class="line"><span>      - JuliaLanguage:</span></span>\n<span class="line"><span>      - Identifier:</span></span>\n<span class="line"><span>      - Other: </span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>    If the user provides special instructions, prioritize these over the general instructions.</span></span></code></pre></div><p><strong>User Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># Text</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>{{text}}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Special Instructions</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>{{instructions}}</span></span></code></pre></div><h3 id="Template:-RAGExtractMetadataShort" tabindex="-1">Template: RAGExtractMetadataShort <a class="header-anchor" href="#Template:-RAGExtractMetadataShort" aria-label="Permalink to &quot;Template: RAGExtractMetadataShort {#Template:-RAGExtractMetadataShort}&quot;">​</a></h3><ul><li><p>Description: For RAG applications. Extracts metadata from the provided text. If you don&#39;t have any special instructions, provide <code>instructions=&quot;None.&quot;</code>. Placeholders: <code>text</code>, <code>instructions</code></p></li><li><p>Placeholders: <code>text</code>, <code>instructions</code></p></li><li><p>Word count: 278</p></li><li><p>Source:</p></li><li><p>Version: 1.0</p></li></ul><p><strong>System Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Extract search keywords and their categories from the Text provided below (format &quot;value:category&quot;). Each keyword must be at most 2-3 words. Provide at most 3-5 keywords. I will tip you $50 if the search is successful.</span></span></code></pre></div><p><strong>User Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># Text</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>{{text}}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Special Instructions</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>{{instructions}}</span></span></code></pre></div><h3 id="Template:-RAGJudgeAnswerFromContext" tabindex="-1">Template: RAGJudgeAnswerFromContext <a class="header-anchor" href="#Template:-RAGJudgeAnswerFromContext" aria-label="Permalink to &quot;Template: RAGJudgeAnswerFromContext {#Template:-RAGJudgeAnswerFromContext}&quot;">​</a></h3><ul><li><p>Description: For RAG applications. Judge an answer to a question on a scale from 1-5. Placeholders: <code>question</code>, <code>context</code>, <code>answer</code></p></li><li><p>Placeholders: <code>question</code>, <code>context</code>, <code>answer</code></p></li><li><p>Word count: 1415</p></li><li><p>Source:</p></li><li><p>Version: 1.1</p></li></ul><p><strong>System Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>You&#39;re an impartial judge. Your task is to evaluate the quality of the Answer provided by an AI assistant in response to the User Question on a scale from 1 to 5.</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>1. **Scoring Criteria:**</span></span>\n<span class="line"><span>- **Relevance (1-5):** How well does the provided answer align with the context? </span></span>\n<span class="line"><span>  - *1: Not relevant, 5: Highly relevant*</span></span>\n<span class="line"><span>- **Completeness (1-5):** Does the provided answer cover all the essential points mentioned in the context?</span></span>\n<span class="line"><span>  - *1: Very incomplete, 5: Very complete*</span></span>\n<span class="line"><span>- **Clarity (1-5):** How clear and understandable is the provided answer?</span></span>\n<span class="line"><span>  - *1: Not clear at all, 5: Extremely clear*</span></span>\n<span class="line"><span>- **Consistency (1-5):** How consistent is the provided answer with the overall context?</span></span>\n<span class="line"><span>  - *1: Highly inconsistent, 5: Perfectly consistent*</span></span>\n<span class="line"><span>- **Helpfulness (1-5):** How helpful is the provided answer in answering the user&#39;s question?</span></span>\n<span class="line"><span>  - *1: Not helpful at all, 5: Extremely helpful*</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>2. **Judging Instructions:**</span></span>\n<span class="line"><span>- As an impartial judge, please evaluate the provided answer based on the above criteria. </span></span>\n<span class="line"><span>- Assign a score from 1 to 5 for each criterion, considering the original context, question and the provided answer.</span></span>\n<span class="line"><span>- The Final Score is an average of these individual scores, representing the overall quality and relevance of the provided answer. It must be between 1-5.</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>```</span></span></code></pre></div><p><strong>User Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># User Question</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span>{{question}}</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Context Information</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span>{{context}}</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Assistant&#39;s Answer</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span>{{answer}}</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Judge&#39;s Evaluation</span></span></code></pre></div><h3 id="Template:-RAGJudgeAnswerFromContextShort" tabindex="-1">Template: RAGJudgeAnswerFromContextShort <a class="header-anchor" href="#Template:-RAGJudgeAnswerFromContextShort" aria-label="Permalink to &quot;Template: RAGJudgeAnswerFromContextShort {#Template:-RAGJudgeAnswerFromContextShort}&quot;">​</a></h3><ul><li><p>Description: For RAG applications. Simple and short prompt to judge answer to a question on a scale from 1-5. Placeholders: <code>question</code>, <code>context</code>, <code>answer</code></p></li><li><p>Placeholders: <code>question</code>, <code>context</code>, <code>answer</code></p></li><li><p>Word count: 420</p></li><li><p>Source:</p></li><li><p>Version: 1.0</p></li></ul><p><strong>System Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>You re an impartial judge. </span></span>\n<span class="line"><span>Read carefully the provided question and the answer based on the context. </span></span>\n<span class="line"><span>Provide a rating on a scale 1-5 (1=worst quality, 5=best quality) that reflects how relevant, helpful, clear, and consistent with the provided context the answer was.</span></span>\n<span class="line"><span>```</span></span></code></pre></div><p><strong>User Prompt:</strong></p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># User Question</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span>{{question}}</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Context Information</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span>{{context}}</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Assistant&#39;s Answer</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span>{{answer}}</span></span>\n<span class="line"><span>---</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span># Judge&#39;s Evaluation</span></span></code></pre></div>', 39);
const _hoisted_40 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_40);
}
const RAG = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  RAG as default
};
